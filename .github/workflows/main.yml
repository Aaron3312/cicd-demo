name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Build with Maven
        run: mvn -B compile --file pom.xml
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: compiled-classes
          path: target/classes/
          retention-days: 1

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: compiled-classes
          path: target/classes/
      
      - name: Test with Maven
        run: mvn -B test --file pom.xml
  
  package:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Package with Maven
        run: mvn -B package --file pom.xml -DskipTests
      
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: jar-file
          path: target/*.jar
          retention-days: 1

  docker-build-push:
    needs: package
    runs-on: ubuntu-latest
    # Only run on main branch pushes, not on pull requests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: jar-file
          path: target/
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build, tag, and push image to DockerHub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_NAME: my-java-image
        run: |
          docker build -t $DOCKERHUB_USERNAME/$IMAGE_NAME:latest .
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:latest